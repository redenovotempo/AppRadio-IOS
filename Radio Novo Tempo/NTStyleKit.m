//
//  NTStyleKit.m
//  ProjectName
//
//  Created by Michel on 2/17/15.
//  Copyright (c) 2015 BigZero. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "NTStyleKit.h"


@implementation NTStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawIconWithFrame: (CGRect)frame isPressed: (BOOL)isPressed
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* blue = [UIColor colorWithRed: 0 green: 0.357 blue: 0.584 alpha: 1];

    //// Variable Declarations
    BOOL checkIsPressed = !isPressed;


    //// Subframes
    CGRect pressed = CGRectMake(CGRectGetMinX(frame) + 3, CGRectGetMinY(frame) + 2, floor((CGRectGetWidth(frame) - 3) * 0.99429 + 0.5), floor((CGRectGetHeight(frame) - 2) * 0.98864 + 0.5));
    CGRect unpressed = CGRectMake(CGRectGetMinX(frame) + 3, CGRectGetMinY(frame) + 2, floor((CGRectGetWidth(frame) - 3) * 0.99429 + 0.5), floor((CGRectGetHeight(frame) - 2) * 0.98864 + 0.5));


    //// pressed
    {
        if (isPressed)
        {
            //// Oval 2 Drawing
            UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(pressed) + floor(CGRectGetWidth(pressed) * 0.00000 + 0.5), CGRectGetMinY(pressed) + floor(CGRectGetHeight(pressed) * 0.00000 + 0.5), floor(CGRectGetWidth(pressed) * 1.00000 + 0.5) - floor(CGRectGetWidth(pressed) * 0.00000 + 0.5), floor(CGRectGetHeight(pressed) * 1.00000 + 0.5) - floor(CGRectGetHeight(pressed) * 0.00000 + 0.5))];
            [blue setFill];
            [oval2Path fill];
            [blue setStroke];
            oval2Path.lineWidth = 1;
            [oval2Path stroke];
        }


        //// Symbol 2 Drawing
        CGRect symbol2Rect = CGRectMake(CGRectGetMinX(pressed) + floor(CGRectGetWidth(pressed) * 0.15230) + 0.5, CGRectGetMinY(pressed) + floor(CGRectGetHeight(pressed) * 0.15230) + 0.5, floor(CGRectGetWidth(pressed) * 0.84195) - floor(CGRectGetWidth(pressed) * 0.15230), floor(CGRectGetHeight(pressed) * 0.84195) - floor(CGRectGetHeight(pressed) * 0.15230));
        CGContextSaveGState(context);
        UIRectClip(symbol2Rect);
        CGContextTranslateCTM(context, symbol2Rect.origin.x, symbol2Rect.origin.y);
        CGContextScaleCTM(context, symbol2Rect.size.width / 200, symbol2Rect.size.height / 200);

        [NTStyleKit drawMicWhite];
        CGContextRestoreGState(context);
    }


    if (checkIsPressed)
    {
        //// unpressed
        {
            //// Oval Drawing
            UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(unpressed) + floor(CGRectGetWidth(unpressed) * 0.00000 + 0.5), CGRectGetMinY(unpressed) + floor(CGRectGetHeight(unpressed) * 0.00000 + 0.5), floor(CGRectGetWidth(unpressed) * 1.00000 + 0.5) - floor(CGRectGetWidth(unpressed) * 0.00000 + 0.5), floor(CGRectGetHeight(unpressed) * 1.00000 + 0.5) - floor(CGRectGetHeight(unpressed) * 0.00000 + 0.5))];
            [UIColor.whiteColor setFill];
            [ovalPath fill];
            [blue setStroke];
            ovalPath.lineWidth = 1.3;
            [ovalPath stroke];


            //// Group
            {
                //// Group 3
                {
                    //// Symbol Drawing
                    CGRect symbolRect = CGRectMake(CGRectGetMinX(unpressed) + floor(CGRectGetWidth(unpressed) * 0.15230) + 0.5, CGRectGetMinY(unpressed) + floor(CGRectGetHeight(unpressed) * 0.15805) + 0.5, floor(CGRectGetWidth(unpressed) * 0.83621) - floor(CGRectGetWidth(unpressed) * 0.15230), floor(CGRectGetHeight(unpressed) * 0.84195) - floor(CGRectGetHeight(unpressed) * 0.15805));
                    CGContextSaveGState(context);
                    UIRectClip(symbolRect);
                    CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);
                    CGContextScaleCTM(context, symbolRect.size.width / 200, symbolRect.size.height / 200);

                    [NTStyleKit drawMic];
                    CGContextRestoreGState(context);
                }
            }
        }
    }
}

+ (void)drawMicWhite
{

    //// Group 17
    {
        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(134.61, 102.25)];
        [bezier3Path addCurveToPoint: CGPointMake(107.94, 128.5) controlPoint1: CGPointMake(134.61, 115.37) controlPoint2: CGPointMake(121.28, 128.5)];
        [bezier3Path addLineToPoint: CGPointMake(99.05, 128.5)];
        [bezier3Path addCurveToPoint: CGPointMake(72.39, 102.25) controlPoint1: CGPointMake(85.72, 128.5) controlPoint2: CGPointMake(72.39, 115.37)];
        [bezier3Path addLineToPoint: CGPointMake(72.39, 76)];
        [bezier3Path addLineToPoint: CGPointMake(63.5, 76)];
        [bezier3Path addLineToPoint: CGPointMake(63.5, 102.25)];
        [bezier3Path addCurveToPoint: CGPointMake(99.05, 137.25) controlPoint1: CGPointMake(63.5, 119.75) controlPoint2: CGPointMake(81.28, 137.25)];
        [bezier3Path addLineToPoint: CGPointMake(99.05, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(72.39, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(72.39, 163.5)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 163.5)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(107.94, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(107.94, 137.25)];
        [bezier3Path addCurveToPoint: CGPointMake(143.5, 102.25) controlPoint1: CGPointMake(125.72, 137.25) controlPoint2: CGPointMake(143.5, 119.75)];
        [bezier3Path addLineToPoint: CGPointMake(143.5, 76)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 76)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 102.25)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [UIColor.whiteColor setFill];
        [bezier3Path fill];


        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = UIBezierPath.bezierPath;
        [bezier7Path moveToPoint: CGPointMake(107.9, 119.75)];
        [bezier7Path addCurveToPoint: CGPointMake(125.72, 102.32) controlPoint1: CGPointMake(117.75, 119.75) controlPoint2: CGPointMake(125.72, 111.87)];
        [bezier7Path addLineToPoint: CGPointMake(125.72, 40.93)];
        [bezier7Path addCurveToPoint: CGPointMake(107.9, 23.5) controlPoint1: CGPointMake(125.72, 31.3) controlPoint2: CGPointMake(117.77, 23.5)];
        [bezier7Path addLineToPoint: CGPointMake(99.1, 23.5)];
        [bezier7Path addCurveToPoint: CGPointMake(81.28, 40.93) controlPoint1: CGPointMake(89.25, 23.5) controlPoint2: CGPointMake(81.28, 31.37)];
        [bezier7Path addLineToPoint: CGPointMake(81.28, 102.32)];
        [bezier7Path addCurveToPoint: CGPointMake(99.1, 119.75) controlPoint1: CGPointMake(81.28, 111.94) controlPoint2: CGPointMake(89.22, 119.75)];
        [bezier7Path addLineToPoint: CGPointMake(107.9, 119.75)];
        [bezier7Path closePath];
        bezier7Path.miterLimit = 4;

        [UIColor.whiteColor setFill];
        [bezier7Path fill];
    }
}

+ (void)drawMic
{
    //// Color Declarations
    UIColor* blue = [UIColor colorWithRed: 0 green: 0.357 blue: 0.584 alpha: 1];

    //// Group 17
    {
        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(134.61, 102.25)];
        [bezier3Path addCurveToPoint: CGPointMake(107.94, 128.5) controlPoint1: CGPointMake(134.61, 115.37) controlPoint2: CGPointMake(121.28, 128.5)];
        [bezier3Path addLineToPoint: CGPointMake(99.05, 128.5)];
        [bezier3Path addCurveToPoint: CGPointMake(72.39, 102.25) controlPoint1: CGPointMake(85.72, 128.5) controlPoint2: CGPointMake(72.39, 115.37)];
        [bezier3Path addLineToPoint: CGPointMake(72.39, 76)];
        [bezier3Path addLineToPoint: CGPointMake(63.5, 76)];
        [bezier3Path addLineToPoint: CGPointMake(63.5, 102.25)];
        [bezier3Path addCurveToPoint: CGPointMake(99.05, 137.25) controlPoint1: CGPointMake(63.5, 119.75) controlPoint2: CGPointMake(81.28, 137.25)];
        [bezier3Path addLineToPoint: CGPointMake(99.05, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(72.39, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(72.39, 163.5)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 163.5)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(107.94, 154.75)];
        [bezier3Path addLineToPoint: CGPointMake(107.94, 137.25)];
        [bezier3Path addCurveToPoint: CGPointMake(143.5, 102.25) controlPoint1: CGPointMake(125.72, 137.25) controlPoint2: CGPointMake(143.5, 119.75)];
        [bezier3Path addLineToPoint: CGPointMake(143.5, 76)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 76)];
        [bezier3Path addLineToPoint: CGPointMake(134.61, 102.25)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [blue setStroke];
        bezier3Path.lineWidth = 1.5;
        [bezier3Path stroke];


        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = UIBezierPath.bezierPath;
        [bezier7Path moveToPoint: CGPointMake(107.9, 119.75)];
        [bezier7Path addCurveToPoint: CGPointMake(125.72, 102.32) controlPoint1: CGPointMake(117.75, 119.75) controlPoint2: CGPointMake(125.72, 111.87)];
        [bezier7Path addLineToPoint: CGPointMake(125.72, 40.93)];
        [bezier7Path addCurveToPoint: CGPointMake(107.9, 23.5) controlPoint1: CGPointMake(125.72, 31.3) controlPoint2: CGPointMake(117.77, 23.5)];
        [bezier7Path addLineToPoint: CGPointMake(99.1, 23.5)];
        [bezier7Path addCurveToPoint: CGPointMake(81.28, 40.93) controlPoint1: CGPointMake(89.25, 23.5) controlPoint2: CGPointMake(81.28, 31.37)];
        [bezier7Path addLineToPoint: CGPointMake(81.28, 102.32)];
        [bezier7Path addCurveToPoint: CGPointMake(99.1, 119.75) controlPoint1: CGPointMake(81.28, 111.94) controlPoint2: CGPointMake(89.22, 119.75)];
        [bezier7Path addLineToPoint: CGPointMake(107.9, 119.75)];
        [bezier7Path closePath];
        bezier7Path.miterLimit = 4;

        [blue setStroke];
        bezier7Path.lineWidth = 1.5;
        [bezier7Path stroke];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfIconWithFrame: (CGRect)frame isPressed: (BOOL)isPressed
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [NTStyleKit drawIconWithFrame: frame isPressed: isPressed];

    UIImage* imageOfIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfIcon;
}

@end
